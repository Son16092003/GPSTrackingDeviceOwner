package com.plcoding.backgroundlocationtracking.receiver

import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.os.Build
import android.os.PowerManager
import androidx.core.content.ContextCompat
import android.util.Log
import com.plcoding.backgroundlocationtracking.service.LocationService

class BootReceiver : BroadcastReceiver() {

    companion object {
        private const val TAG = "BootReceiver"
    }

    override fun onReceive(context: Context, intent: Intent?) {
        when (intent?.action) {
            Intent.ACTION_BOOT_COMPLETED,
            Intent.ACTION_LOCKED_BOOT_COMPLETED -> {
                Log.i(TAG, "üîÑ Thi·∫øt b·ªã v·ª´a kh·ªüi ƒë·ªông l·∫°i ‚Äî ki·ªÉm tra ƒëi·ªÅu ki·ªán tr∆∞·ªõc khi b·∫≠t service")

                val prefs = context.getSharedPreferences("setup_prefs", Context.MODE_PRIVATE)
                val title = prefs.getString("title", null)
                val userName = prefs.getString("user_name", null)

                // Ki·ªÉm tra danh t√≠nh tr∆∞·ªõc khi b·∫≠t tracking
                if (title.isNullOrEmpty() || userName.isNullOrEmpty()) {
                    Log.w(TAG, "‚ö†Ô∏è Thi·∫øu th√¥ng tin title ho·∫∑c userName ‚Äî b·ªè qua kh·ªüi ƒë·ªông LocationService sau reboot.")
                    return
                }

                val serviceIntent = Intent(context, LocationService::class.java)

                // Gi·ªØ CPU ho·∫°t ƒë·ªông trong v√†i gi√¢y ƒë·ªÉ ƒë·∫£m b·∫£o service k·ªãp kh·ªüi ch·∫°y
                val pm = context.getSystemService(Context.POWER_SERVICE) as PowerManager
                val wakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, "BootReceiver::WakeLock")
                wakeLock.acquire(5000)

                try {
                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                        ContextCompat.startForegroundService(context, serviceIntent)
                        Log.i(TAG, "üì° ƒêang kh·ªüi ch·∫°y foreground service (Android O+)")
                    } else {
                        context.startService(serviceIntent)
                        Log.i(TAG, "üì° ƒêang kh·ªüi ch·∫°y background service (d∆∞·ªõi Android O)")
                    }
                } catch (e: Exception) {
                    Log.e(TAG, "‚ùå L·ªói khi kh·ªüi ƒë·ªông LocationService sau reboot: ${e.message}", e)
                } finally {
                    if (wakeLock.isHeld) {
                        wakeLock.release()
                    }
                }
            }

            else -> {
                Log.w(TAG, "‚ö†Ô∏è Nh·∫≠n intent kh√¥ng mong ƒë·ª£i: ${intent?.action}")
            }
        }
    }
}
