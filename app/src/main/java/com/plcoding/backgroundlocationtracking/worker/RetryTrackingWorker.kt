package com.plcoding.backgroundlocationtracking.worker

import android.content.Context
import android.util.Log
import androidx.work.CoroutineWorker
import androidx.work.WorkerParameters
import androidx.work.ListenableWorker.Result
import com.plcoding.backgroundlocationtracking.data.local.OfflineTrackingManager

class RetryTrackingWorker(
    appContext: Context,
    params: WorkerParameters
) : CoroutineWorker(appContext, params) {

    override suspend fun doWork(): Result {
        val tag = "RetryTrackingWorker"
        return try {
            Log.i(tag, "üîÑ B·∫Øt ƒë·∫ßu retry d·ªØ li·ªáu pending qua WorkManager...")

            val successCount = OfflineTrackingManager.retryOffline(applicationContext)

            if (successCount > 0) {
                Log.i(tag, "‚úÖ Retry ho√†n t·∫•t: $successCount b·∫£n ghi g·ª≠i th√†nh c√¥ng.")
            } else {
                Log.i(tag, "‚ÑπÔ∏è Kh√¥ng c√≥ d·ªØ li·ªáu pending ho·∫∑c kh√¥ng g·ª≠i ƒë∆∞·ª£c b·∫£n ghi n√†o.")
            }

            // Tr·∫£ v·ªÅ th√†nh c√¥ng, WorkManager kh√¥ng c·∫ßn retry
            Result.success()

        } catch (e: Exception) {
            Log.e(tag, "‚ùå L·ªói khi retry pending: ${e.message}", e)

            // Cho ph√©p WorkManager t·ª± ƒë·ªông retry l·∫°i sau backoff delay
            Result.retry()
        }
    }
}
