package com.plcoding.backgroundlocationtracking.worker

import android.content.Context
import android.util.Log
import androidx.work.*
import java.util.concurrent.TimeUnit

object RetryWorkerScheduler {

    private const val WORK_NAME = "retry_tracking_worker"

    fun schedule(context: Context) {
        try {
            // ‚öôÔ∏è ƒêi·ªÅu ki·ªán ch·ªâ ch·∫°y khi c√≥ m·∫°ng
            val constraints = Constraints.Builder()
                .setRequiredNetworkType(NetworkType.CONNECTED)
                .build()

            // üïê L√™n l·ªãch ch·∫°y ƒë·ªãnh k·ª≥ m·ªói 15 ph√∫t
            val workRequest = PeriodicWorkRequestBuilder<RetryTrackingWorker>(
                15, TimeUnit.MINUTES
            )
                .setConstraints(constraints)
                .setInitialDelay(2, TimeUnit.MINUTES) // tr√°nh tr√πng v·ªõi startup app
                .addTag(WORK_NAME)
                .build()

            WorkManager.getInstance(context).enqueueUniquePeriodicWork(
                WORK_NAME,
                ExistingPeriodicWorkPolicy.KEEP,
                workRequest
            )

            Log.i("RetryWorkerScheduler", "‚úÖ ƒê√£ l√™n l·ªãch Worker retry m·ªói 15 ph√∫t (ch·ªâ ch·∫°y khi c√≥ m·∫°ng).")

        } catch (e: Exception) {
            Log.e("RetryWorkerScheduler", "‚ùå L·ªói khi schedule Worker: ${e.message}", e)
        }
    }
}
